{"ast":null,"code":"var _jsxFileName = \"C:\\\\20240801-gangnam\\\\07_REACT\\\\03_hooks\\\\src\\\\03_useMemo\\\\04_object-type-problem.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useMemo } from \"react\";\n\n// useMemo : 메모이제이션을 통해 비용이 큰 계산을 최적화 하거나,\n//참조(주소값)이 동일해야 하는 경우에 사용한다..\n// 의존성이 변경되지 않으면 이전의 계산된 값을\n// 재사용 하여 불필요한 렌더링을 방지한다.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LocationComponent = () => {\n  _s();\n  const [isKorea, setIsKorea] = useState(true);\n  const [number, setNumber] = useState(0);\n  console.log(\"랜더링\");\n  // 1. 지역 변수에 문자열로 초기화 -기본 자료형(state변화시 location 변화없음)\n  const location = isKorea ? \"한국\" : \"일본\";\n\n  // 2. 지역 변수에 객체로 초기화 -주소값이 변해서 \n  // 유즈이팩트 호출 객체의 주소값이 랜더링시마다 변화\n  const location1 = {\n    country: isKorea ? \"한국\" : \"일본\"\n  };\n  // 3. 지역 변수에 useMemo의 반환값으로 초기화\n  const location2 = useMemo(() => {\n    return {\n      country: isKorea ? \"한국\" : \"일본\"\n    };\n  }, [isKorea]);\n  useEffect(() => {\n    console.log(\"useEffect 호출\");\n  }, [location2]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC9C0\\uAE08 \\uB2F9\\uC2E0\\uC758 \\uC704\\uCE58\\uB294? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uAD6D\\uAC00 : \", location1.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsKorea(!isKorea),\n      children: \"\\uAD6D\\uAC00 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC88B\\uC544\\uD558\\uB294 \\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: e => setNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(LocationComponent, \"uolGhVlgOujdptzQXyArULMRHfI=\");\n_c = LocationComponent;\nvar _c;\n$RefreshReg$(_c, \"LocationComponent\");","map":{"version":3,"names":["useState","useEffect","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","LocationComponent","_s","isKorea","setIsKorea","number","setNumber","console","log","location","location1","country","location2","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/20240801-gangnam/07_REACT/03_hooks/src/03_useMemo/04_object-type-problem.js"],"sourcesContent":["import { useState, useEffect , useMemo } from \"react\"\r\n\r\n// useMemo : 메모이제이션을 통해 비용이 큰 계산을 최적화 하거나,\r\n//참조(주소값)이 동일해야 하는 경우에 사용한다..\r\n// 의존성이 변경되지 않으면 이전의 계산된 값을\r\n// 재사용 하여 불필요한 렌더링을 방지한다.\r\n\r\nexport const LocationComponent = ()=>\r\n{\r\n    const [isKorea,setIsKorea] = useState(true);\r\n    const [number,setNumber] = useState(0);\r\n\r\n    console.log(\"랜더링\");\r\n    // 1. 지역 변수에 문자열로 초기화 -기본 자료형(state변화시 location 변화없음)\r\n    const location = isKorea? \"한국\":\"일본\";\r\n\r\n    // 2. 지역 변수에 객체로 초기화 -주소값이 변해서 \r\n    // 유즈이팩트 호출 객체의 주소값이 랜더링시마다 변화\r\n    const location1 = {\r\n        country : isKorea? \"한국\":\"일본\"\r\n        \r\n    }\r\n    // 3. 지역 변수에 useMemo의 반환값으로 초기화\r\n    const location2 = useMemo(()=>{\r\n        return{\r\n           country : isKorea? \"한국\":\"일본\"\r\n        }\r\n    },[isKorea])\r\n\r\n    useEffect(()=>{\r\n        console.log(\"useEffect 호출\");\r\n    },[location2]);\r\n\r\n    return (\r\n        <>\r\n            <h2>지금 당신의 위치는? </h2>\r\n            <p>국가 : {location1.country}</p>\r\n            <button onClick={()=>setIsKorea(!isKorea)}>국가 변경</button>\r\n            <hr/>\r\n            <h2>좋아하는 숫자를 입력해 주세요</h2>\r\n            <input type=\"number\" value={number}\r\n                onChange={e=>setNumber(e.target.value)}/>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAGC,OAAO,QAAQ,OAAO;;AAErD;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KACjC;EAAAC,EAAA;EACI,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACW,MAAM,EAACC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEtCa,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB;EACA,MAAMC,QAAQ,GAAGN,OAAO,GAAE,IAAI,GAAC,IAAI;;EAEnC;EACA;EACA,MAAMO,SAAS,GAAG;IACdC,OAAO,EAAGR,OAAO,GAAE,IAAI,GAAC;EAE5B,CAAC;EACD;EACA,MAAMS,SAAS,GAAGhB,OAAO,CAAC,MAAI;IAC1B,OAAM;MACHe,OAAO,EAAGR,OAAO,GAAE,IAAI,GAAC;IAC3B,CAAC;EACL,CAAC,EAAC,CAACA,OAAO,CAAC,CAAC;EAEZR,SAAS,CAAC,MAAI;IACVY,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC/B,CAAC,EAAC,CAACI,SAAS,CAAC,CAAC;EAEd,oBACId,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAAe,QAAA,GAAG,iBAAK,EAACH,SAAS,CAACC,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAId,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAU,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLnB,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnB,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEf,MAAO;MAC/BgB,QAAQ,EAAEC,CAAC,IAAEhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC/C,CAAC;AAEX,CAAC;AAAAf,EAAA,CArCYD,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}