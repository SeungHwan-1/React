{"ast":null,"code":"var _jsxFileName = \"C:\\\\20240801-gangnam\\\\07_REACT\\\\03_hooks\\\\src\\\\01_useEffect\\\\04_useEffect-cleanup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\n/*\r\n    useEffect는 기본적으로 랜더링 직후와 업데이트 직후 호출된다.\r\n    컴포넌트가 마운트 해제되기 직전이나 업데이트 되기 전에\r\n    실행할 내용이 있다면 정리 (clean-up)을 할 수 있다.\r\n    이전 effect 내용을 정리하고 난 뒤 새로운 effect가 동작하도록 할 떄 사용된다..\r\n    이전 effect가 남아있는 상태에서 새로운 effect가 발생하게 되면\r\n    마운트 해제가 일어나고 나서도 메모리 누수나 출동이 발생할 가능성이 있다.\r\n*/\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  return;\n};\n_c = Timer;\nexport const Container = () => {\n  _s();\n  const [isTrue, setIsTure] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsTure(!isTrue);\n      },\n      children: \"\\uD0C0\\uC774\\uBA38 \\uD1A0\\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), isTrue && /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n_s(Container, \"v39w455sJSvU01LQDayW+hcPK7c=\");\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","_c","Container","_s","isTrue","setIsTure","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/20240801-gangnam/07_REACT/03_hooks/src/01_useEffect/04_useEffect-cleanup.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\n/*\r\n    useEffect는 기본적으로 랜더링 직후와 업데이트 직후 호출된다.\r\n    컴포넌트가 마운트 해제되기 직전이나 업데이트 되기 전에\r\n    실행할 내용이 있다면 정리 (clean-up)을 할 수 있다.\r\n    이전 effect 내용을 정리하고 난 뒤 새로운 effect가 동작하도록 할 떄 사용된다..\r\n    이전 effect가 남아있는 상태에서 새로운 effect가 발생하게 되면\r\n    마운트 해제가 일어나고 나서도 메모리 누수나 출동이 발생할 가능성이 있다.\r\n*/\r\n\r\nconst Timer = () => {\r\n\r\n    return\r\n}\r\n\r\n\r\n\r\n\r\nexport const Container = ()=>{\r\n    const [isTrue,setIsTure] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <button onClick={()=>{setIsTure(!isTrue)}}>타이머 토글</button>\r\n            {isTrue && <Timer/>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,SAAS,QAAO,OAAO;;AAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAEhB;AACJ,CAAC;AAAAC,EAAA,GAHKD,KAAK;AAQX,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAI;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE1C,oBACIG,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAI;QAACF,SAAS,CAAC,CAACD,MAAM,CAAC;MAAA,CAAE;MAAAE,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzDP,MAAM,iBAAIP,OAAA,CAACG,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACrB,CAAC;AAEX,CAAC;AAAAR,EAAA,CATYD,SAAS;AAAAU,GAAA,GAATV,SAAS;AAAA,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}